
public class App {

	public static void main(String[] args) {

		Human tom = new Human();
//		walker(tom);
		
		Robot wale = new Robot();
//		walker(wale);
		
		walker(() -> System.out.println("Custom object walking..."));
		
		Walkable aBlockOfCode =  () -> {
			System.out.println("Custom object walking...");
			System.out.println("the object tripped...");
			};
			
		walker(aBlockOfCode);	
		
		ALambdaInterface helloVar = ()-> System.out.println("hello there");
		Calculate sumVar = (a, b) -> a+b;
		helloVar.someMethod();
		System.out.println(sumVar.compute(4, 6));
		
		Calculate nonZeroDivider = (a, b) -> {
			if (a ==0) {
				return 0; 
			}
			return a/b;
		};
		System.out.println(nonZeroDivider.compute(10, 5));
	}
	
	public void sayHello() {
		System.out.println("hello there");
		}
	
	public int sum(int arg1, int arg2) {
		return arg1+arg2;
	}
	
	public int nonZeroDivide(int arg1, int arg2) {
		if (arg1==0) {
			return 0; 
		}
		
		return arg1/arg2;
	}
	
	public static void walker(Walkable walkableEntitiy) { 
	walkableEntitiy.walk();
	}

}

interface Calculate{
	
	public int compute(int a, int b);
}

		
		
	/*	ALambdaInterface aBlockOfCode =  () -> {
			System.out.println("Custom object walking...");
			System.out.println("the object tripped...");
			};
*/		

		
	/*	walker( () -> {
					System.out.println("Custom object walking...");
					System.out.println("the object tripped...");
					});
		*/

		//walker( () -> System.out.println("Custom object walking..."));
		
	/*	walker(new Walkable() {

			@Override
			public void walk() {
				System.out.println("Custom object walking...");
				
			}
			
		});
		*/
	
//public static void walker(Walkable walkableEntitiy) {
//		walkableEntitiy.walk();
	
//	}
		
